<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,400,600,700">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300">
    <link rel="stylesheet" href="style.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
            }
            body {
                background: url(images/bg2.jpg) no-repeat;
                background-size: cover;
                position: relative;
        }
        body::after {
            content: '';
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: -1;
            }
        .home{
            height:80px;
        }
        button{
            float: right;
            margin: 30px;
            height
        }
        button {
            padding: 12.5px 30px;
            border: 0;
            border-radius: 100px;
            background-color: #2ba8fb;
            color: #ffffff;
            font-weight: Bold;
            transition: all 0.5s;
            -webkit-transition: all 0.5s;
          }
          
          button:hover {
            background-color: #6fc5ff;
            box-shadow: 0 0 20px #6fc5ff50;
            transform: scale(1.1);
          }
          
          button:active {
            background-color: #3d94cf;
            transition: all 0.25s;
            -webkit-transition: all 0.25s;
            box-shadow: none;
            transform: scale(0.98);
          }
          .forecast-btn-container{
            padding-top: 40px;
            margin-left: 45%;
          }
        ul{
            display: flex;
            color: white;
        }
        .location-container {
            position: relative;
            margin-left: 35%;
          }
          
          .location-input {
            width: 400px;
            border: solid 1.5px #ffffff;
            border-radius: 1rem;
            background: none;
            padding: 1rem;
            font-size: 1rem;
            transition: border 150ms cubic-bezier(0.4,0,0.2,1);
          }
          
          .location-label {
            position: absolute;
            left: 15px;
            color: #ffffff;
            pointer-events: none;
            transform: translateY(1rem);
            transition: 150ms cubic-bezier(0.4,0,0.2,1);
          }
          
          .location-input:focus,
          .location-input:valid {
            outline: none;
            border: 1.5px solid #1a73e8;
          }
          
          .location-input:focus ~ .location-label,
          .location-input:valid ~ .location-label {
            transform: translateY(-50%) scale(0.8);
            padding: 0 .2em;
            font-size: 20px;
            color: #008cff;
          }
          li{
            list-style-type: none;
            height:200px
          }
          :root {
            --min-temp-color: rgb(0, 135, 54);
            --min-temp-bg: rgba(58, 189, 171, 0.329);
            --max-temp-color: rgb(255, 0, 55);
            --max-temp-bg: rgba(255, 99, 132, 0.2);
        }

        .chart-container {
            display:none;
            position: relative;
            height: 50vh;
            width: 80vw;
            margin: 0 auto;
            padding-top: 20px;
        }

        canvas {
            background-color: #bababa;
            /* Background color for the chart */
            border-radius: 15px;
            /* Rounded corners for the chart */
        }
    </style>
</head>

<body>
    <div class="home">
        <a href='index.htm'>
            <button >Home</button>
        </a>
    </div>
    <div class="container">
        <div class="info-side">
            <div class="location-container">
                <input class="location-input" type="text" id="city" value="" required>
                <label class="location-label">Search Here</label>
              </div>
              
              
            <div class="week-container">
                <ul class="week-list">
                    <li class="card">
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <li>
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <li>
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <li>
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <li>
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <li>
                        <span class="day-name"></span>
                        <span class="day-temp"></span>
                        <span class="day-icon"></span>
                    </li>
                    <div class="clear"></div>
                </ul>
            </div>
        </div>
    </div>
    <div class="chart-container">
        <canvas id="weatherChart"></canvas>
    </div>    
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        document.getElementById('city').addEventListener('input', function () {
            var city = this.value;
            getWeather(city);
        });
        
        async function getWeather() {
            try {
                var city = document.getElementById('city').value;
                console.log('City name:', city);
        
                const response = await axios.get('https://api.openweathermap.org/data/2.5/forecast', {
                    params: {
                        q: city,
                        appid: '3e59a8b2bc0b6177832c82258e3e9771',
                        units: 'metric'
                    },
                });
                const forecastData = response.data.list;
        
                const dailyForecast = {};
                forecastData.forEach((data) => {
                    const day = new Date(data.dt * 1000).toLocaleDateString('en-US', {
                        weekday: 'long'
                    });
                    if (!dailyForecast[day]) {
                        dailyForecast[day] = {
                            minTemp: data.main.temp_min,
                            maxTemp: data.main.temp_max,
                            description: data.weather[0].description,
                            humidity: data.main.humidity,
                            windSpeed: data.wind.speed,
                            icon: data.weather[0].icon,
                        };
                    } else {
                        dailyForecast[day].minTemp = Math.min(dailyForecast[day].minTemp, data.main.temp_min);
                        dailyForecast[day].maxTemp = Math.max(dailyForecast[day].maxTemp, data.main.temp_max);
                    }
                });
        
                const dayElements = document.querySelectorAll('.day-name');
                const tempElements = document.querySelectorAll('.day-temp');
                const iconElements = document.querySelectorAll('.day-icon');
        
                dayElements.forEach((dayElement, index) => {
                    const day = Object.keys(dailyForecast)[index];
                    const data = dailyForecast[day];
                    dayElement.textContent = day;
                    tempElements[index].textContent = `${Math.round(data.minTemp)}ยบ / ${Math.round(data.maxTemp)}ยบ`;
                    iconElements[index].innerHTML = getWeatherIcon(data.icon);
                });
        
                const labels = Object.keys(dailyForecast);
                const minTemps = labels.map(label => dailyForecast[label].minTemp);
                const maxTemps = labels.map(label => dailyForecast[label].maxTemp);
        
                createWeatherChart(labels, minTemps, maxTemps);
        
                // Show the chart after data is fetched
                document.querySelector('.chart-container').style.display = 'block';
        
            } catch (error) {
                console.error('Error fetching data:', error.message);
            }
        }
        
        function getWeatherIcon(iconCode) {
            const iconBaseUrl = 'https://openweathermap.org/img/wn/';
            const iconSize = '@2x.png';
            return `<img src="${iconBaseUrl}${iconCode}${iconSize}" alt="Weather Icon">`;
        }
        
        function createWeatherChart(labels, minTemps, maxTemps) {
            const ctx = document.getElementById('weatherChart').getContext('2d');
        
            // Ensure to destroy the old chart instance before creating a new one
            if (window.myChart) {
                window.myChart.destroy();
            }
        
            window.myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [
                        {
                            label: 'Min Temperature (ยบC)',
                            data: minTemps,
                            borderColor: getComputedStyle(document.documentElement).getPropertyValue('--min-temp-color').trim(),
                            backgroundColor: getComputedStyle(document.documentElement).getPropertyValue('--min-temp-bg').trim(),
                            fill: true,
                        },
                        {
                            label: 'Max Temperature (ยบC)',
                            data: maxTemps,
                            borderColor: getComputedStyle(document.documentElement).getPropertyValue('--max-temp-color').trim(),
                            backgroundColor: getComputedStyle(document.documentElement).getPropertyValue('--max-temp-bg').trim(),
                            fill: true,
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Temperature (ยบC)'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Days of the Week'
                            }
                        }
                    }
                }
            });
        }
        
        document.addEventListener("DOMContentLoaded", function () {
            getWeather();
            setInterval(getWeather, 900000); // Refresh every 15 minutes (900000 ms)
        });
        
    </script>
</body>

</html>
